{% extends "include/fastboot.jinja2" %}

{% set rootfs = rootfs|default(false) %}
{% set DEPLOY_TARGET = DEPLOY_TARGET|default("downloads") %}
{% set target_deploy_timeout = target_deploy_timeout |default(35) %}
{% set deploy_fastboot_timeout = deploy_fastboot_timeout|default(10) %}

{# force all the lkft-android jobs to be run with the docker method #}
{% set USE_DOCKER_IMAGE_FOR_TEST_TARGET = true %}

{% set DOCKER_PTABLE_FILE = DOCKER_PTABLE_FILE|default("ptable-linux-8g.img") %}
{% set DOCKER_BOOT_FILE = DOCKER_BOOT_FILE|default("boot.img") %}
{# use the same file name as for boot partition if no boot_a or boot_b images #}
{% set DOCKER_BOOT_A_FILE = DOCKER_BOOT_A_FILE|default(DOCKER_BOOT_FILE) %}
{% set DOCKER_BOOT_B_FILE = DOCKER_BOOT_B_FILE|default(DOCKER_BOOT_FILE) %}
{% set DOCKER_VBMETA_FILE = DOCKER_VBMETA_FILE|default("vbmeta.img") %}
{# use the same file name as for vbmeta partition if no vbmeta_a or vbmeta_b images #}
{% set DOCKER_VBMETA_A_FILE = DOCKER_VBMETA_A_FILE|default(DOCKER_VBMETA_FILE) %}
{% set DOCKER_VBMETA_B_FILE = DOCKER_VBMETA_B_FILE|default(DOCKER_VBMETA_FILE) %}
{% set DOCKER_SUPER_FILE = DOCKER_SUPER_FILE|default("super.img") %}
{% set DOCKER_SYSTEM_FILE = DOCKER_SYSTEM_FILE|default("system.img") %}
{% set DOCKER_VENDOR_FILE = DOCKER_VENDOR_FILE|default("vendor.img") %}
{% set DOCKER_VENDOR_BOOT_FILE = DOCKER_VENDOR_BOOT_FILE|default("vendor_boot.img") %}
{% set DOCKER_CACHE_FILE = DOCKER_CACHE_FILE|default("cache.img") %}
{% set DOCKER_METADATA_FILE = DOCKER_METADATA_FILE|default("metadata.img") %}
{% set DOCKER_RECOVERY_FILE = DOCKER_RECOVERY_FILE|default("recovery.img") %}
{% set DOCKER_USERDATA_FILE = DOCKER_USERDATA_FILE|default("userdata.img") %}
{#################### job definitions ##########################}
{% block metadata %}
{% include PROJECT+"include/metadata.jinja2" %}
{% endblock metadata %}

{% block deploy_target %}
{{ super() }}

{% if DEPLOY_TARGET == "downloads" %}
{% block deploy_fastboot %}
- deploy:
    timeout:
      minutes: {{ deploy_fastboot_timeout }}
    to: fastboot
    docker:
      image: {{ DOCKER_IMAGE }}
    images:
{% if ptable == true %}
      {{ PTABLE_LABEL }}:
        url: downloads://{{ DOCKER_PTABLE_FILE }}
{% endif %}
{# only deploy to the boot partition when A/B partition not supported #}
{% if boot == true %}
      {{ BOOT_LABEL }}:
        url: downloads://{{ DOCKER_BOOT_FILE }}
{% endif %}
{% if partition_boot_b == true %}
      boot_b:
        url: downloads://{{ DOCKER_BOOT_B_FILE }}
{% endif %}
{% if partition_super == true %}
      super:
        url: downloads://{{ DOCKER_SUPER_FILE }}
{% endif %}
{% if partition_system == true %}
      system:
        url: downloads://{{ DOCKER_SYSTEM_FILE }}
{% endif %}
{% if partition_vendor == true %}
      vendor:
        url: downloads://{{ DOCKER_VENDOR_FILE }}
{% endif %}
{% if partition_vendor_boot == true %}
      vendor_boot:
        url: downloads://{{ DOCKER_VENDOR_BOOT_FILE }}
{% endif %}
{% if partition_cache == true %}
      cache:
        url: downloads://{{ DOCKER_CACHE_FILE }}
{% endif %}
{% if partition_vbmeta_a == true %}
      vbmeta_a:
        url: downloads://{{ DOCKER_VBMETA_FILE }}
{% endif %}
{% if partition_vbmeta_b == true %}
      vbmeta_b:
        url: downloads://{{ DOCKER_VBMETA_FILE }}
{% endif %}
{% if partition_recovery == true %}
      recovery:
        url: downloads://{{ DOCKER_RECOVERY_FILE }}
{% endif %}
{% if partition_userdata == true %}
      userdata:
        url: downloads://{{ DOCKER_USERDATA_FILE }}
{% endif %}
{% endblock deploy_fastboot %}
{% endif %}
{% endblock deploy_target %}
